import numpy as np
from sklearn.linear_model import LinearRegression

# Point Cloud coordinates
a = np.array([
[0.13211446, 0.08839465, 0.67060286],
[0.12242845, 0.01629816, 0.7096983 ],
[ 0.12260661, -0.05824933,  0.74710685],
[0.05268858, 0.10264619, 0.6680587 ],
[ 0.04104299, -0.05538233,  0.74926305],
[-0.048625    , 0.10139543,  0.6724831 ],
[-0.05147357, -0.05131577,  0.7519664 ],
[-0.04032335,  0.03748492,  0.70345867],
[0.03261213, 0.03469212, 0.7026458 ]
])

# robot coordinates
b = np.array([
[0.09732072, 0.0967254 , 0.42448577],
[ 0.094399713, -0.00014480746,  0.42263037],
[ 0.09730708, -0.09730708,  0.42120323],
[0.00014106520, 0.091960140, 0.42549425],
[ 0.00673944, -0.10202466,  0.4227075 ],
[-0.09078037,  0.09161977,  0.4235288 ],
[-0.09016898, -0.09826759,  0.4236408 ],
[-0.08998688,  0.00594426,  0.422503  ],
[0.00035398186, 0.0037719081, 0.42250609]
])

def compute_robot_transformation_matrix(a, b):
    lr = LinearRegression(fit_intercept=False).fit(a,b)
    return lr.coef_.T

if __name__ == '__main__':
    # Point Cloud coordinates
    a = np.array([
    [0.13211446, 0.08839465, 0.67060286],
    [0.12242845, 0.01629816, 0.7096983 ],
    [ 0.12260661, -0.05824933,  0.74710685],
    [0.05268858, 0.10264619, 0.6680587 ],
    [ 0.04104299, -0.05538233,  0.74926305],
    [-0.048625    , 0.10139543,  0.6724831 ],
    [-0.05147357, -0.05131577,  0.7519664 ],
    [-0.04032335,  0.03748492,  0.70345867],
    [0.03261213, 0.03469212, 0.7026458 ]
    ])

    # robot coordinates
    b = np.array([
    [0.09732072, 0.0967254 , 0.42448577],
    [ 0.094399713, -0.00014480746,  0.42263037],
    [ 0.09730708, -0.09730708,  0.42120323],
    [0.00014106520, 0.091960140, 0.42549425],
    [ 0.00673944, -0.10202466,  0.4227075 ],
    [-0.09078037,  0.09161977,  0.4235288 ],
    [-0.09016898, -0.09826759,  0.4236408 ],
    [-0.08998688,  0.00594426,  0.422503  ],
    [0.00035398186, 0.0037719081, 0.42250609]
    ])

    compute_robot_transformation_matrix(a, b)
